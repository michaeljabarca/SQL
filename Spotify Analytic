# For this project, I downloaded Spotify data from Kaggle (Spotify top 50 songs in 2021), then created a table to insert the Spotify data into.
# Then performed analytics on the data

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Inserted the Spotify Data .csv into the table.

#Explored the data using the following SQL. 

#Determined the avg popularity, danceability, and energy by artist and track. 
SELECT artist_name , track_name , avg(popularity) AS Average_Popularity, avg(danceability) AS Average_Danceability, avg(energy) AS Average_Energy
FROM BIT_DB.spotifydata
GROUP BY artist_name, track_name 

#Determined who the Top 10 artists were by popularity
SELECT artist_name, track_name, popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10

#Determined which artists have appeared more than once and which ones appeared on the list the most
SELECT artist_name, COUNT(artist_name) AS number_times_listed
FROM BIT_DB.spotifydata
GROUP BY artist_name
ORDER BY number_times_listed DESC

#Determined which artists have the longest songs on the list and listed duration in seconds
SELECT artist_name, track_name, (duration_ms/1000) AS Seconds
FROM BIT_DB.spotifydata
ORDER BY Seconds DESC

#Determined which artists have the most song time on the list
SELECT artist_name, SUM((duration_ms/1000)) AS Total_Seconds_On_List
FROM BIT_DB.spotifydata
GROUP BY artist_name
ORDER BY Total_Seconds_On_List DESC

