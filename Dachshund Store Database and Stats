-- This example shows a store selling Dachshunds some characteristics about them

CREATE TABLE store (id INTEGER PRIMARY KEY, dog TEXT, color TEXT, quantity INTEGER, popularity INTEGER, price INTEGER);

INSERT INTO store VALUES (1, "miniature dachshund", "brown", 6, 8, 175);
INSERT INTO store VALUES (2, "miniature dachshund", "red", 3, 10 , 165);
INSERT INTO store VALUES (3, "miniature dachshund", "black and white", 4, 8, 150);
INSERT INTO store VALUES (4, "standard dachshund", "brown", 3, 7, 120);
INSERT INTO store VALUES (5, "standard dachshund", "red", 2, 9, 120);
INSERT INTO store VALUES (6, "standard dachshund", "black and white", 1, 7, 120);

--display the database ordered by price 
SELECT * 
FROM store 
ORDER BY price DESC;

--what is the average price of a Dachshund?
SELECT Round (AVG(price)) AS "Average Price" 
FROM STORE;

--what is the average price of a Miniature Dachshund?
SELECT Round (AVG(price)) AS "Average Price for Miniature Dachshund" FROM STORE WHERE dog = "miniature dachshund";

--what is the highest price of a Miniature Dachshund?
SELECT MAX(price) AS "Max Price" FROM STORE;

--what is the lowest price of a Miniature Dachshund?
SELECT Min(price) AS "Min Price" FROM STORE;

--what are the 5 most popular Dachshunds? 
SELECT popularity FROM store ORDER BY popularity DESC LIMIT 5;

-- Adding another column "temperament"
ALTER TABLE store ADD temperament TEXT;

-- Filling in the NULL values with data
UPDATE store SET temperament = "Assertive" where id = 1;
UPDATE store SET temperament = "Neutral" where id = 2;
UPDATE store SET temperament = "Assertive" where id = 3;
UPDATE store SET temperament = "Assertive" where id = 4;
UPDATE store SET temperament = "Neutral" where id = 5;
UPDATE store SET temperament = "Passive" where id = 6;

-- Inserting a new row of data that includes the new column
INSERT INTO store (id, dog, color, quantity, popularity, price, temperament) 
    VALUES (7, "kaninchen", "red", 1, 10, 210, "Assertive");
    
-- Which dogs are priced higher than average within the store?
SELECT * 
FROM store WHERE price > (SELECT AVG(price) FROM store) 
ORDER BY price DESC
